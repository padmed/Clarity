{"version":3,"file":"content.bundle.js","mappings":"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","sources":["webpack://clarify-ai/./src/services/index.js","webpack://clarify-ai/./src/utils/constants.js","webpack://clarify-ai/./src/components/fadeOut.js","webpack://clarify-ai/./src/utils/helpers.js","webpack://clarify-ai/./src/utils/coordinates.js","webpack://clarify-ai/./src/components/popup.js","webpack://clarify-ai/./src/components/arrow.js","webpack://clarify-ai/./src/components/popupContent.js","webpack://clarify-ai/./src/components/popupContainer.js","webpack://clarify-ai/./src/utils/popupEventListeners.js","webpack://clarify-ai/./src/utils/animations.js","webpack://clarify-ai/./src/content.js","webpack://clarify-ai/./src/components/loader.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY_AI = \"40xWby26Fb2w295NMSXdJRtWbVsgWqgd\";\nconst apiUrl =\n  \"https://api.deepinfra.com/v1/inference/meta-llama/Llama-2-70b-chat-hf\";\n\nconst headers = {\n  \"Content-Type\": \"application/json\",\n  Authorization: `Bearer ${API_KEY_AI}`,\n};\n\nexport const generateText = async (prompt) => {\n  const requestData = {\n    input: `[INST] <<SYS>> You are a science communicator, your task is to read the following\n            text snippet and describe its content in a simple, short, and understandable way,\n            ensuring clarity for a general audience <<SYS>> ${prompt}[/INST]`,\n  };\n\n  try {\n    const request = await axios.post(apiUrl, requestData, { headers: headers });\n    return request.data;\n  } catch (error) {\n    console.error(\"Error:\", error);\n    return error;\n  }\n};\n","const containerWidth = 350;\nconst containerHeight = 200;\n\n// IDs\nconst popupId = \"popupContainer\";\nconst popupContentId = \"popupContent\";\nconst rootContainerId = \"rootContainer\";\n\n// Classnames\nconst loaderClassName = \"loader\";\n\nexport {\n  containerHeight,\n  containerWidth,\n  popupId,\n  popupContentId,\n  rootContainerId,\n  loaderClassName,\n};\n","// Creates the effect of a text fading out at the bottom and the top insides of a popup\nconst createFadeOut = (side) => {\n  const fadeOut = document.createElement(\"div\");\n\n  if (side === \"top\") {\n    fadeOut.style.cssText = `\n    position: absolute;\n    z-index: 30001;\n    top: 0;\n    height: 15px;\n    width: 100%;\n    background: linear-gradient(to bottom, rgba(27, 18, 18, 0.6), rgba(27, 18, 18, 0) 95%);\n    border-top-right-radius: 7px;\n    border-top-left-radius: 7px;\n`;\n  } else {\n    fadeOut.style.cssText = `\n    position: absolute;\n    z-index: 30001;\n    top: 160px;\n    height: 40px;\n    width: 100%;\n    background: linear-gradient(to top, rgba(27, 18, 18, 0.8), rgba(27, 18, 18, 0) 95%);\n    border-bottom-right-radius: 7px;\n    border-bottom-left-radius: 7px;\n`;\n  }\n  return fadeOut;\n};\n\nexport default createFadeOut;\n","import { popupContentId, loaderClassName } from \"./constants\";\n\n// Gets coordinates of user text selection\nexport const getSelectionCords = (selection) => {\n  if (selection.rangeCount > 0) {\n    const range = selection.getRangeAt(0);\n    const boundingRect = range.getBoundingClientRect();\n\n    return {\n      top: boundingRect.top + window.scrollY,\n      left: boundingRect.left + window.scrollX,\n      bottom: boundingRect.bottom + window.scrollY,\n      right: boundingRect.right + window.scrollX,\n    };\n  }\n};\n\n// Checks whether the selection is in top or bottom half of a screen\nexport const isInTopHalf = (selection) => {\n  const range = selection.getRangeAt(0);\n  const boundingRect = range.getBoundingClientRect();\n\n  const verticalMidpoint = window.innerHeight / 2;\n\n  return boundingRect.top + boundingRect.height / 2 < verticalMidpoint\n    ? true\n    : false;\n};\n\n// Returns the root of popup shadow DOM\nexport const getShadowRoot = () =>\n  document.getElementById(\"rootContainer\").shadowRoot;\n\n// Returns the main container of popup\nexport const getPopupContainer = () => {\n  const root = getShadowRoot();\n  const popup = root.querySelector(\"#popupContainer\");\n\n  return popup;\n};\n\nexport const getPopupContent = () => {\n  const root = getShadowRoot();\n  const popupContent = root.querySelector(`#${popupContentId}`);\n  return popupContent;\n};\n\nexport const writeInPopupContent = (textToWrite) => {\n  const popupContent = getPopupContent();\n  let i = 0;\n  const speed = 20;\n\n  const typeWriter = () => {\n    if (i < textToWrite.length) {\n      popupContent.innerHTML += textToWrite.charAt(i);\n      i++;\n      setTimeout(typeWriter, speed);\n    }\n  };\n\n  typeWriter();\n};\n","import { isInTopHalf, getSelectionCords } from \"./helpers\";\nimport { containerHeight, containerWidth } from \"./constants\";\n\nconst selection = window.getSelection();\nconst isInTop = isInTopHalf(selection);\n\nconst { top, left, bottom, right } = getSelectionCords(selection);\n\n// Vertical position when shown\nconst verticalPos = isInTop ? bottom + 10 : top - containerHeight - 10;\n// Vertical position when hidden\nconst verticalPosHidden = isInTop\n  ? verticalPos - containerHeight / 2\n  : verticalPos + containerHeight / 2;\nconst horizontalPos = (left + right) / 2 - containerWidth / 2;\n\nexport { verticalPos, verticalPosHidden, horizontalPos, isInTop };\n","import createArrow from \"./arrow\";\nimport createFadeOut from \"./fadeOut\";\nimport createPopupContainer from \"./popupContainer\";\nimport createPopupContent from \"./popupContent\";\nimport { verticalPos, horizontalPos, isInTop } from \"../utils/coordinates\";\n\n// Creation of all popup components\nconst arrow = createArrow(isInTop);\nconst popupContent = createPopupContent();\nconst fadeOutBottom = createFadeOut(\"bottom\");\nconst fadeOutTop = createFadeOut(\"top\");\nconst popupContainer = createPopupContainer(horizontalPos);\n\n// Assembling the components into a popup\npopupContainer.appendChild(fadeOutBottom);\npopupContainer.appendChild(fadeOutTop);\npopupContainer.appendChild(arrow);\npopupContainer.appendChild(popupContent);\n\nexport default popupContainer;\n","import { containerWidth } from \"../utils/constants\";\n\n// Creates arrow of a popup which points to user selection\nconst createArrow = (isInTop) => {\n  // Checks whether the arrow should be on top or bottom side\n  const arrowVertPosition = isInTop ? \"-10px\" : \"185px\";\n  // Rotates arrow based on where it's located\n  const arrowPoint = isInTop ? -45 : 135;\n\n  const arrow = document.createElement(\"div\");\n  arrow.style.cssText = `position: absolute;\n    z-index: 2999;\n    width: 25px;\n    height: 25px;\n    background: rgb(238,174,202);\n    background: linear-gradient(45deg, rgba(238,174,202,0) 55%, rgba(27, 18, 18, 0.8) 58%);\n    left: ${containerWidth / 2}px;\n    top: ${arrowVertPosition};\n    transform: rotate(${arrowPoint}deg);\n    border-radius: 5px;\n    `;\n\n  return arrow;\n};\n\nexport default createArrow;\n","import { popupContentId } from \"../utils/constants\";\nimport createLoader from \"./loader\";\n\n// Creates the container for the content to fit in, this is where the generated text goes\nconst createPopupContent = () => {\n  const popupContent = document.createElement(\"div\");\n  popupContent.setAttribute(\"id\", popupContentId);\n\n  popupContent.style.cssText = `color: rgb(249, 246, 238);\n    margin: 0;\n    height: calc(100% - 35px);\n    padding-right: 15px;\n    padding-left: 15px;\n    padding-top: 15px;\n    padding-bottom: 15px;\n    font-size: 15px;\n    overflow: scroll;\n    position: relative;\n    `;\n\n  return popupContent;\n};\n\nexport default createPopupContent;\n","import { popupId } from \"../utils/constants\";\nimport { containerHeight, containerWidth } from \"../utils/constants\";\nimport { verticalPosHidden } from \"../utils/coordinates\";\n\n// Creates the popup container, acts as a skeleton of a popup\nconst createPopupContainer = (horizontalPos) => {\n  const popupContainer = document.createElement(\"div\");\n  popupContainer.setAttribute(\"id\", popupId);\n\n  popupContainer.style.cssText = `\n    transform: scale(0);\n    transition: all linear 0.2s;\n    width: ${containerWidth}px;\n    height: ${containerHeight}px;\n    background-color: rgba(27, 18, 18, 0.8);\n    position: absolute;\n    z-index: 30000;\n    border-radius: 7px;\n    backdrop-filter: blur(5px);\n    top: ${verticalPosHidden}px;\n    left: ${horizontalPos}px;\n    box-shadow: 0px 0px 10px rgba(27, 18, 18, 0.7);\n    color: white;\n    `;\n\n  return popupContainer;\n};\n\nexport default createPopupContainer;\n","import { closePopupAnimation } from \"./animations\";\nimport { getPopupContainer } from \"./helpers\";\n\n// Counter for smooth popup close\nlet scrollCount = 0;\nconst maxScrollCount = 50;\n\nconst handlePopupClose = () => {\n  const popupContainer = getPopupContainer();\n\n  closePopupAnimation();\n\n  // Removes popup from DOM\n  setTimeout(() => {\n    popupContainer.remove();\n  }, 200);\n\n  // Removing all the listeners\n  document.removeEventListener(\"click\", handleEvent);\n  window.removeEventListener(\"scroll\", handleEvent);\n};\n\nconst handleEvent = (e) => {\n  const popupContainer = getPopupContainer();\n\n  if (!popupContainer.contains(e.target)) {\n    scrollCount++;\n\n    if (e.type === \"scroll\" && scrollCount >= maxScrollCount) {\n      handlePopupClose();\n    } else if (e.type === \"click\") {\n      handlePopupClose();\n    }\n  }\n};\n\nconst listenPopupEvents = () => {\n  document.addEventListener(\"click\", handleEvent);\n  window.addEventListener(\"scroll\", handleEvent);\n};\n\nexport default listenPopupEvents;\n","import { getPopupContainer, getPopupContent } from \"./helpers\";\nimport { verticalPosHidden } from \"./coordinates\";\nimport { loaderClassName } from \"./constants\";\nimport createLoader from \"../components/loader\";\n\nexport const openPopupAnimation = (verticalPos) => {\n  setTimeout(() => {\n    const popup = getPopupContainer();\n\n    popup.style.transform = \"scale(1)\";\n    popup.style.top = `${verticalPos}px`;\n  }, 100);\n};\n\nexport const closePopupAnimation = () => {\n  const popup = getPopupContainer();\n  popup.style.transform = `scale(0)`;\n  popup.style.top = `${verticalPosHidden}px`;\n};\n\nexport const showLoader = () => {\n  const popupContent = getPopupContent();\n  const loader = createLoader();\n\n  popupContent.appendChild(loader);\n};\nexport const hideLoader = () => {\n  const popupContent = getPopupContent();\n  const loader = popupContent.querySelector(`.${loaderClassName}`);\n  loader.style.transform = \"scale(0)\";\n};\n","import { generateText } from \"./services\";\nimport popup from \"./components/popup.js\";\nimport listenPopupEvents from \"./utils/popupEventListeners.js\";\nimport {\n  popupContentId,\n  rootContainerId,\n  loaderClassName,\n} from \"./utils/constants.js\";\nimport { writeInPopupContent } from \"./utils/helpers.js\";\nimport { hideLoader } from \"./utils/animations.js\";\nimport { openPopupAnimation, showLoader } from \"./utils/animations.js\";\nimport { verticalPos } from \"./utils/coordinates.js\";\n\nconst selection = window.getSelection();\nsetTimeout(() => {\n  hideLoader();\n  writeInPopupContent(selection.toString());\n}, 3000);\n// generateText(selection.toString()).then((data) => {\n//   hideLoader();\n//   const text = data.results[0].generated_text;\n//   writeInPopupContent(text);\n// });\n\nlistenPopupEvents();\n\nconst rootContainer = document.createElement(\"div\");\nrootContainer.setAttribute(\"id\", rootContainerId);\ndocument.body.insertAdjacentHTML(\"afterbegin\", rootContainer.outerHTML);\n\nconst shadowRoot = document\n  .getElementById(rootContainerId)\n  .attachShadow({ mode: \"open\" });\n\nshadowRoot.innerHTML = `\n  <style>\n/* HTML: <div class=\"loader\"></div> */\n.${loaderClassName} {\n  width: 35px;\n  aspect-ratio: 1;\n  display: grid;\n  transition: all linear 0.1s;\n  position: absolute;\n  top: 80px;\n  left: 160px;\n\n}\n.${loaderClassName}:before,\n.${loaderClassName}:after {\n  content: \"\";\n  grid-area: 1/1;\n  border-radius: 50%;\n  background: #FFFFFF;\n  -webkit-mask:repeating-linear-gradient(#000 0 5px,#0000 0 10px);\n  animation: l35 1.5s infinite;\n}\n.${loaderClassName}:after {\n  -webkit-mask:repeating-linear-gradient(#0000 0 5px,#000 0 10px);\n  --s:-1;\n}\n@keyframes l35 {\n  0%,\n  10% {transform: translate(0) rotate(0)}\n  35% {transform: translate(calc(var(--s,1)*50%)) rotate(0)}\n  66% {transform: translate(calc(var(--s,1)*50%)) rotate(calc(var(--s,1)*180deg))}\n  90%,\n  100% {transform: translate(0) rotate(calc(var(--s,1)*180deg))}\n}</style>\n  ${popup.outerHTML}`;\n\n// Opening a popup\nopenPopupAnimation(verticalPos);\nshowLoader();\n","import { loaderClassName } from \"../utils/constants\";\n\nconst createLoader = () => {\n  const loader = document.createElement(\"div\");\n  loader.className = loaderClassName;\n\n  return loader;\n};\n\nexport default createLoader;\n"],"names":["popupContentId","rootContainerId","loaderClassName","side","fadeOut","document","createElement","style","cssText","getShadowRoot","getElementById","shadowRoot","getPopupContainer","querySelector","getPopupContent","selection","window","getSelection","isInTop","boundingRect","getRangeAt","getBoundingClientRect","verticalMidpoint","innerHeight","top","height","isInTopHalf","left","bottom","right","rangeCount","scrollY","scrollX","getSelectionCords","verticalPos","verticalPosHidden","containerHeight","horizontalPos","containerWidth","arrow","arrowVertPosition","arrowPoint","createArrow","popupContent","createPopupContent","setAttribute","fadeOutBottom","createFadeOut","fadeOutTop","popupContainer","createPopupContainer","appendChild","scrollCount","handleEvent","e","contains","target","type","handlePopupClose","closePopupAnimation","popup","transform","setTimeout","remove","removeEventListener","textToWrite","i","typeWriter","length","innerHTML","charAt","writeInPopupContent","toString","addEventListener","rootContainer","body","insertAdjacentHTML","outerHTML","attachShadow","mode","openPopupAnimation","showLoader","loader","createLoader","className"],"sourceRoot":""}