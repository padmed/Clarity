{"version":3,"file":"content.bundle.js","mappings":"mBAEA,MCuBaA,EAAgBA,IAC3BC,SAASC,eAAe,iBAAiBC,WAE9BC,EAAoBA,IAClBJ,IACMK,cAAc,mBCxB7BC,EAAYC,OAAOC,eACnBC,EDOsBH,KAC1B,MACMI,EADQJ,EAAUK,WAAW,GACRC,wBAErBC,EAAmBN,OAAOO,YAAc,EAE9C,OAAOJ,EAAaK,IAAML,EAAaM,OAAS,EAAIH,CAE3C,ECfKI,CAAYX,IAEpBS,IAAG,OAAEG,EAAI,OAAEC,EAAM,MAAEC,GDTOd,KAChC,GAAIA,EAAUe,WAAa,EAAG,CAC5B,MACMX,EADQJ,EAAUK,WAAW,GACRC,wBAE3B,MAAO,CACLG,IAAKL,EAAaK,IAAMR,OAAOe,QAC/BJ,KAAMR,EAAaQ,KAAOX,OAAOgB,QACjCJ,OAAQT,EAAaS,OAASZ,OAAOe,QACrCF,MAAOV,EAAaU,MAAQb,OAAOgB,QAEvC,GCFmCC,CAAkBlB,GAKjDmB,EAAchB,EAAUU,EAAS,GAAKJ,EAFpB,IAE4C,GAC9DW,EAAoBjB,EACtBgB,EAAcE,IACdF,EAAcE,IACZC,GAAiBV,EAAOE,GAAS,EAAIS,IAErCC,EAAiB7B,SAAS8B,cAAc,OAC9CD,EAAeE,aAAa,KAAM,kBAElCF,EAAeG,MAAMC,QAAW,uQAUrBR,mBACCE,qFAKZO,YAAW,KACT,MACMC,EADOpC,IACMK,cAAc,mBAEjC+B,EAAMH,MAAMI,UAAY,WACxBD,EAAMH,MAAMlB,IAAO,GAAEU,KAAe,GACnC,KAEI,MAODa,EAAoB7B,EAAW,QAAS,QACxC8B,EAAa9B,GAAW,GAAK,IAE7B+B,EAAQvC,SAAS8B,cAAc,OACrCS,EAAMP,MAAMC,QAAW,4OAOZI,6BACaC,wCAIxB,MAAME,EAAexC,SAAS8B,cAAc,KAC5CU,EAAaT,aAAa,KAAM,gBAChCS,EAAaR,MAAMC,QAAW,+PAY9B,MAAMQ,EAAgBzC,SAAS8B,cAAc,OAC7CW,EAAcT,MAAMC,QAAW,+QAW/B,MAAMS,EAAa1C,SAAS8B,cAAc,OAC1CY,EAAWV,MAAMC,QAAW,wQAW5BJ,EAAec,YAAYF,GAC3BZ,EAAec,YAAYD,GAC3Bb,EAAec,YAAYJ,GAC3BV,EAAec,YAAYH,GAE3B,UC/GA,IAAII,EAAc,EAClB,MAiBMC,EAAeC,IACI3C,IAEH4C,SAASD,EAAEE,UAC7BJ,KAEe,WAAXE,EAAEG,MAAqBL,GAvBR,IAyBG,UAAXE,EAAEG,OAvBQC,MACvB,MAAMrB,EAAiB1B,IAEvB0B,EAAeG,MAAMI,UAAa,WDuCDe,MACjC,MACMhB,EADOpC,IACMK,cAAc,mBACjC+B,EAAMH,MAAMI,UAAa,WACzBD,EAAMH,MAAMlB,IAAO,GAAEW,KAAqB,ECzC1C0B,GAEAjB,YAAW,KACTL,EAAeuB,QAAQ,GACtB,KAEHpD,SAASqD,oBAAoB,QAASR,GACtCvC,OAAO+C,oBAAoB,SAAUR,EAAY,EAU7CK,GAIJ,EC3BI7C,EAAYC,OAAOC,eAMJ4B,EAAM/B,cAAc,iBAC5BkD,UAAYjD,EAAUkD,WDwBjCvD,SAASwD,iBAAiB,QAASX,GACnCvC,OAAOkD,iBAAiB,SAAUX,GCtBpC,MAAMY,EAAgBzD,SAAS8B,cAAc,OAC7C2B,EAAc1B,aAAa,KAAM,iBACjC/B,SAAS0D,KAAKC,mBAAmB,aAAcF,EAAcG,WAE1C5D,SAChBC,eAAe,iBACf4D,aAAa,CAAEC,KAAM,SAEbR,UAAa,OACpBnB,EAAMyB,W","sources":["webpack://clarify-ai/./src/services/index.js","webpack://clarify-ai/./src/utils/helpers.js","webpack://clarify-ai/./src/components/popup.js","webpack://clarify-ai/./src/utils/popupEventListeners.js","webpack://clarify-ai/./src/content.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY_AI = \"40xWby26Fb2w295NMSXdJRtWbVsgWqgd\";\nconst apiUrl =\n  \"https://api.deepinfra.com/v1/inference/meta-llama/Llama-2-70b-chat-hf\";\n\nconst headers = {\n  \"Content-Type\": \"application/json\",\n  Authorization: `Bearer ${API_KEY_AI}`,\n};\n\nexport const generateText = async (prompt) => {\n  const requestData = {\n    input: `[INST] <<SYS>> You are a science communicator, your task is to read the following\n            text snippet and describe its content in a simple, short, and understandable way,\n            ensuring clarity for a general audience <<SYS>> ${prompt}[/INST]`,\n  };\n\n  try {\n    const request = await axios.post(apiUrl, requestData, { headers: headers });\n    return request.data;\n  } catch (error) {\n    console.error(\"Error:\", error);\n    return error;\n  }\n};\n","export const getSelectionCords = (selection) => {\n  if (selection.rangeCount > 0) {\n    const range = selection.getRangeAt(0);\n    const boundingRect = range.getBoundingClientRect();\n\n    return {\n      top: boundingRect.top + window.scrollY,\n      left: boundingRect.left + window.scrollX,\n      bottom: boundingRect.bottom + window.scrollY,\n      right: boundingRect.right + window.scrollX,\n    };\n  }\n};\n\nexport const isInTopHalf = (selection) => {\n  const range = selection.getRangeAt(0);\n  const boundingRect = range.getBoundingClientRect();\n\n  const verticalMidpoint = window.innerHeight / 2;\n\n  return boundingRect.top + boundingRect.height / 2 < verticalMidpoint\n    ? true\n    : false;\n};\n\nexport const getShadowRoot = () =>\n  document.getElementById(\"rootContainer\").shadowRoot;\n\nexport const getPopupContainer = () => {\n  const root = getShadowRoot();\n  const popup = root.querySelector(\"#popupContainer\");\n\n  return popup;\n};\n","import {\n  getSelectionCords,\n  getShadowRoot,\n  isInTopHalf,\n} from \"../utils/helpers\";\n\nconst selection = window.getSelection();\nconst isInTop = isInTopHalf(selection);\n\nconst { top, left, bottom, right } = getSelectionCords(selection);\n\nconst containerWidth = 350;\nconst containerHeight = 200;\n\nconst verticalPos = isInTop ? bottom + 10 : top - containerHeight - 10;\nconst verticalPosHidden = isInTop\n  ? verticalPos - containerHeight / 2\n  : verticalPos + containerHeight / 2;\nconst horizontalPos = (left + right) / 2 - containerWidth / 2;\n\nconst popupContainer = document.createElement(\"div\");\npopupContainer.setAttribute(\"id\", \"popupContainer\");\n\npopupContainer.style.cssText = `\n    transform: scale(0);\n    transition: all linear 0.2s;\n    width: ${containerWidth}px;\n    height: ${containerHeight}px;\n    background-color: rgba(27, 18, 18, 0.8);\n    position: absolute;\n    z-index: 30000;\n    border-radius: 7px;\n    backdrop-filter: blur(5px);\n    top: ${verticalPosHidden}px;\n    left: ${horizontalPos}px;\n    box-shadow: 0px 0px 10px rgba(27, 18, 18, 0.7);\n    color: white;\n    `;\n\nsetTimeout(() => {\n  const root = getShadowRoot();\n  const popup = root.querySelector(\"#popupContainer\");\n\n  popup.style.transform = \"scale(1)\";\n  popup.style.top = `${verticalPos}px`;\n}, 100);\n\nexport const popupCloseAnimation = () => {\n  const root = getShadowRoot();\n  const popup = root.querySelector(\"#popupContainer\");\n  popup.style.transform = `scale(0)`;\n  popup.style.top = `${verticalPosHidden}px`;\n};\n\nconst arrowVertPosition = isInTop ? `-10px` : \"185px\";\nconst arrowPoint = isInTop ? -45 : 135;\n\nconst arrow = document.createElement(\"div\");\narrow.style.cssText = `position: absolute;\n    z-index: 2999;\n    width: 25px;\n    height: 25px;\n    background: rgb(238,174,202);\n    background: linear-gradient(45deg, rgba(238,174,202,0) 55%, rgba(27, 18, 18, 0.8) 58%);\n    left: ${containerWidth / 2}px;\n    top: ${arrowVertPosition};\n    transform: rotate(${arrowPoint}deg);\n    border-radius: 5px;\n    `;\n\nconst popupContent = document.createElement(\"p\");\npopupContent.setAttribute(\"id\", \"popupContent\");\npopupContent.style.cssText = `color: rgb(249, 246, 238);\n    margin: 0;\n    height: calc(100% - 35px);\n    padding-right: 15px;\n    padding-left: 15px;\n    padding-top: 15px;\n    padding-bottom: 15px;\n    font-size: 15px;\n    overflow: scroll;\n    position: relative;\n    `;\n\nconst fadeOutBottom = document.createElement(\"div\");\nfadeOutBottom.style.cssText = `\n    position: absolute;\n    z-index: 30001;\n    top: 160px;\n    height: 40px;\n    width: 100%; \n    background: linear-gradient(to top, rgba(27, 18, 18, 0.8), rgba(27, 18, 18, 0) 95%);\n    border-bottom-right-radius: 7px;\n    border-bottom-left-radius: 7px;\n`;\n\nconst fadeOutTop = document.createElement(\"div\");\nfadeOutTop.style.cssText = `\n    position: absolute;\n    z-index: 30001;\n    top: 0;\n    height: 15px;\n    width: 100%; \n    background: linear-gradient(to bottom, rgba(27, 18, 18, 0.6), rgba(27, 18, 18, 0) 95%);\n    border-top-right-radius: 7px;\n    border-top-left-radius: 7px;\n`;\n\npopupContainer.appendChild(fadeOutBottom);\npopupContainer.appendChild(fadeOutTop);\npopupContainer.appendChild(arrow);\npopupContainer.appendChild(popupContent);\n\nexport default popupContainer;\n","import { popupCloseAnimation } from \"../components/popup\";\nimport { getPopupContainer } from \"./helpers\";\nlet scrollCount = 0;\nconst maxScrollCount = 50;\n\nconst handlePopupClose = () => {\n  const popupContainer = getPopupContainer();\n\n  popupContainer.style.transform = `scale(0)`;\n\n  popupCloseAnimation();\n\n  setTimeout(() => {\n    popupContainer.remove();\n  }, 200);\n\n  document.removeEventListener(\"click\", handleEvent);\n  window.removeEventListener(\"scroll\", handleEvent);\n};\n\nconst handleEvent = (e) => {\n  const popupContainer = getPopupContainer();\n\n  if (!popupContainer.contains(e.target)) {\n    scrollCount++;\n\n    if (e.type === \"scroll\" && scrollCount >= maxScrollCount) {\n      handlePopupClose();\n    } else if (e.type === \"click\") {\n      handlePopupClose();\n    }\n  }\n};\n\nconst listenPopupEvents = () => {\n  document.addEventListener(\"click\", handleEvent);\n  window.addEventListener(\"scroll\", handleEvent);\n};\n\nexport default listenPopupEvents;\n","import { generateText } from \"./services\";\nimport popup from \"./components/popup.js\";\nimport listenPopupEvents from \"./utils/popupEventListeners.js\";\n\nconst selection = window.getSelection();\n// // generateText(selection.toString()).then((data) => {\n// //   const text = data.results[0].generated_text;\n// //   console.log(text);\n// // });\n\nconst popupContent = popup.querySelector(\"#popupContent\");\npopupContent.innerHTML = selection.toString();\nlistenPopupEvents();\n\nconst rootContainer = document.createElement(\"div\");\nrootContainer.setAttribute(\"id\", \"rootContainer\");\ndocument.body.insertAdjacentHTML(\"afterbegin\", rootContainer.outerHTML);\n\nconst shadowRoot = document\n  .getElementById(\"rootContainer\")\n  .attachShadow({ mode: \"open\" });\n\nshadowRoot.innerHTML = `\n  ${popup.outerHTML}`;\n"],"names":["getShadowRoot","document","getElementById","shadowRoot","getPopupContainer","querySelector","selection","window","getSelection","isInTop","boundingRect","getRangeAt","getBoundingClientRect","verticalMidpoint","innerHeight","top","height","isInTopHalf","left","bottom","right","rangeCount","scrollY","scrollX","getSelectionCords","verticalPos","verticalPosHidden","containerHeight","horizontalPos","containerWidth","popupContainer","createElement","setAttribute","style","cssText","setTimeout","popup","transform","arrowVertPosition","arrowPoint","arrow","popupContent","fadeOutBottom","fadeOutTop","appendChild","scrollCount","handleEvent","e","contains","target","type","handlePopupClose","popupCloseAnimation","remove","removeEventListener","innerHTML","toString","addEventListener","rootContainer","body","insertAdjacentHTML","outerHTML","attachShadow","mode"],"sourceRoot":""}