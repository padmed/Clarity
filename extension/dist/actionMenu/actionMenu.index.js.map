{"version":3,"file":"actionMenu/actionMenu.index.js","mappings":"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","sources":["webpack://clarify-ai/./src/services/AuthService.js","webpack://clarify-ai/./src/actionMenu/index.js"],"sourcesContent":["class AuthService {\n  constructor() {\n    this.userData = null;\n    this.email = null;\n    this.picture = null;\n    this.freeTrial = null;\n  }\n\n  async initialize() {\n    const userData = await chrome.storage.sync.get([\"userData\"]);\n\n    if (!userData) {\n      this.updateUserProps(null);\n      return;\n    }\n    this.updateUserProps(userData);\n  }\n\n  async login() {\n    try {\n      // Step 1: Get authentication token\n      const token = await this.getAuthToken(true);\n\n      // Step 2: Get user credentials using the token\n      const userCreds = await this.getUserCredentials(token);\n\n      // Step 3: Send login request with user credentials\n      const userData = await this.sendLoginRequest(userCreds);\n\n      // Step 4: Update user properties\n      this.updateUserProps(userData);\n\n      console.log(\"Logged in successfully\");\n      return this.userData;\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      throw error;\n    }\n  }\n\n  async logout() {\n    try {\n      // Step 1: Get authentication token\n      const token = await this.getAuthToken(false);\n\n      if (token) {\n        // Step 2: Remove cached authentication token\n        await this.removeCachedAuthToken(token);\n\n        // Step 3: Revoke token\n        await this.revokeToken(token);\n        console.log(\"Logged out successfully\");\n      } else {\n        console.log(\"No token found\");\n      }\n\n      // Step 4: Clear user properties\n      this.updateUserProps(null);\n\n      return { response: \"ok\" };\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n      throw error;\n    }\n  }\n\n  async getAuthToken(interactive) {\n    return new Promise((resolve, reject) => {\n      chrome.identity.getAuthToken({ interactive: interactive }, (token) => {\n        if (chrome.runtime.lastError) {\n          reject(chrome.runtime.lastError);\n        } else {\n          resolve(token);\n        }\n      });\n    });\n  }\n\n  async removeCachedAuthToken(token) {\n    return new Promise((resolve, reject) => {\n      chrome.identity.removeCachedAuthToken({ token: token }, () => {\n        if (!chrome.runtime.lastError) {\n          resolve();\n        } else {\n          reject(chrome.runtime.lastError);\n        }\n      });\n    });\n  }\n\n  async revokeToken(token) {\n    const response = await fetch(\n      \"https://accounts.google.com/o/oauth2/revoke?token=\" + token,\n      {\n        method: \"GET\",\n      }\n    );\n    if (!response.ok) {\n      console.error(\"Error revoking token:\", response.statusText);\n    }\n  }\n\n  async getUserCredentials(token) {\n    const response = await fetch(\n      \"https://www.googleapis.com/oauth2/v3/userinfo?access_token=\" + token\n    );\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch user data\");\n    }\n    return await response.json();\n  }\n\n  async sendLoginRequest(user) {\n    const data = JSON.stringify(user);\n    const response = await fetch(\"http://localhost:3001/api/auth/signin\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: data,\n    });\n    if (!response.ok) {\n      console.error(\"Login request failed:\", response.status);\n      throw new Error(\"Login request failed\");\n    }\n\n    return await response.json();\n  }\n\n  updateUserProps(data) {\n    if (!data) {\n      this.userData = null;\n      this.email = null;\n      this.picture = null;\n      this.freeTrial = null;\n      return;\n    }\n    this.userData = data;\n    this.email = data.email;\n    this.picture = data.picture;\n    this.freeTrial = data.freeTrial;\n  }\n}\n\nconst user = new AuthService();\nexport default user;\n","import user from \"../services/AuthService\";\n\nconst signInbutton = document.querySelector(\".buttonSignin\");\nconst signOutButton = document.querySelector(\".buttonSignout\");\n\nconst tokens = document.querySelector(\".tokens\");\n\nconst initActionMenu = async () => {\n  await user.initialize();\n  const { userData } = user.userData;\n\n  if (!userData) {\n    const userGreeting = document.querySelector(\".greetUser\");\n    userGreeting.textContent = `Please log in to continue`;\n    signInbutton.addEventListener(\"click\", (e) => {\n      chrome.runtime.sendMessage({ message: \"signInRequest\" });\n    });\n    signOutButton.style.display = \"none\";\n    return;\n  }\n\n  const userGreeting = document.querySelector(\".greetUser\");\n  userGreeting.textContent = `Welcome, ${userData.email}`;\n  signOutButton.addEventListener(\"click\", (e) => {\n    chrome.runtime.sendMessage({ message: \"logOutRequest\" });\n  });\n  signInbutton.style.display = \"none\";\n  console.log(tokens);\n  tokens.textContent = `Available tokens: ${userData.freeTrial.tokens}/20`;\n};\n\ninitActionMenu();\n"],"names":["constructor","this","userData","email","picture","freeTrial","initialize","chrome","storage","sync","get","updateUserProps","login","token","getAuthToken","userCreds","getUserCredentials","sendLoginRequest","console","log","error","logout","removeCachedAuthToken","revokeToken","response","interactive","Promise","resolve","reject","identity","runtime","lastError","fetch","method","ok","statusText","Error","json","user","data","JSON","stringify","headers","body","status","signInbutton","document","querySelector","signOutButton","tokens","async","textContent","addEventListener","e","sendMessage","message","style","display","initActionMenu"],"sourceRoot":""}