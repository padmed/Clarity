{"version":3,"file":"worker/worker.index.js","mappings":"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","sources":["webpack://clarify-ai/./src/services/AuthService.js","webpack://clarify-ai/./src/app.js"],"sourcesContent":["class AuthService {\n  constructor() {\n    this.userData = null;\n    this.email = null;\n    this.picture = null;\n    this.freeTrial = null;\n  }\n\n  async login() {\n    try {\n      // Step 1: Get authentication token\n      const token = await this.getAuthToken(true);\n\n      // Step 2: Get user credentials using the token\n      const userCreds = await this.getUserCredentials(token);\n\n      // Step 3: Send login request with user credentials\n      const userData = await this.sendLoginRequest(userCreds);\n\n      // Step 4: Update user properties and save to storage\n      this.updateUserProps(userData);\n      await this.saveUserDataToStorage();\n\n      return this.userData;\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      throw error;\n    }\n  }\n\n  async logout() {\n    try {\n      // Step 1: Get authentication token\n      const token = await this.getAuthToken(false);\n\n      if (token) {\n        // Step 2: Remove cached authentication token\n        await this.removeCachedAuthToken(token);\n\n        // Step 3: Revoke token\n        await this.revokeToken(token);\n        console.log(\"Logged out successfully\");\n      } else {\n        console.log(\"No token found\");\n      }\n\n      // Step 4: Clear user properties and remove data from storage\n      this.updateUserProps(null);\n      await this.clearUserDataFromStorage();\n\n      return { response: \"ok\" };\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n      throw error;\n    }\n  }\n\n  async saveUserDataToStorage() {\n    await chrome.storage.sync.set({ userData: this.userData });\n  }\n\n  async clearUserDataFromStorage() {\n    await chrome.storage.sync.set({ userData: null });\n  }\n\n  async getAuthToken(interactive) {\n    return new Promise((resolve, reject) => {\n      chrome.identity.getAuthToken({ interactive: interactive }, (token) => {\n        if (chrome.runtime.lastError) {\n          reject(chrome.runtime.lastError);\n        } else {\n          resolve(token);\n        }\n      });\n    });\n  }\n\n  async removeCachedAuthToken(token) {\n    return new Promise((resolve, reject) => {\n      chrome.identity.removeCachedAuthToken({ token: token }, () => {\n        if (!chrome.runtime.lastError) {\n          resolve();\n        } else {\n          reject(chrome.runtime.lastError);\n        }\n      });\n    });\n  }\n\n  async revokeToken(token) {\n    const response = await fetch(\n      \"https://accounts.google.com/o/oauth2/revoke?token=\" + token,\n      {\n        method: \"GET\",\n      }\n    );\n    if (!response.ok) {\n      console.error(\"Error revoking token:\", response.statusText);\n    }\n  }\n\n  async getUserCredentials(token) {\n    const response = await fetch(\n      \"https://www.googleapis.com/oauth2/v3/userinfo?access_token=\" + token\n    );\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch user data\");\n    }\n    return await response.json();\n  }\n\n  async sendLoginRequest(user) {\n    const data = JSON.stringify(user);\n    const response = await fetch(\"http://localhost:3001/api/auth/signin\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: data,\n    });\n    if (!response.ok) {\n      console.error(\"Login request failed:\", response.status);\n      throw new Error(\"Login request failed\");\n    }\n\n    return await response.json();\n  }\n\n  updateUserProps(data) {\n    if (!data) {\n      this.userData = null;\n      this.email = null;\n      this.picture = null;\n      this.freeTrial = null;\n      return;\n    }\n    this.userData = data;\n    this.email = data.email;\n    this.picture = data.picture;\n    this.freeTrial = data.freeTrial;\n  }\n}\n\nconst user = new AuthService();\nexport default user;\n","import user from \"./services/AuthService\";\n\nconst createContextMenu = () => {\n  chrome.contextMenus.create({\n    title: \"Clarity\",\n    contexts: [\"selection\"],\n    id: \"mfbigjpknmeflcogckmjhpghdjbfpmle\",\n  });\n};\n\nconst handleOnInstalled = (details) => {\n  if (details.reason !== \"install\" && details.reason !== \"update\") return;\n  createContextMenu();\n  const externalUrl = \"http://localhost:3000/onboarding/signin\";\n  chrome.tabs.create({ url: externalUrl }, (tab) => {\n    console.log(\"New tab launched with http://localhost:3000/\");\n  });\n};\n\nconst handleOnStartup = async () => {\n  const userData = await chrome.storage.sync.get([\"userData\"]);\n  console.log(miau);\n};\n\nconst handleMessages = async (request, sender, sendResponse) => {\n  if (request.message === \"signInRequest\") {\n    const response = await user.login();\n    console.log(response);\n  } else if (request.message === \"logOutRequest\") {\n    const response = await user.logout();\n    console.log(response);\n  }\n};\n\nconst onContextMenuClicked = async (details) => {\n  if (details.menuItemId === \"mfbigjpknmeflcogckmjhpghdjbfpmle\") {\n    const [tab] = await chrome.tabs.query({\n      active: true,\n      lastFocusedWindow: true,\n    });\n\n    chrome.scripting.executeScript({\n      target: { tabId: tab.id },\n      files: [\"./content/content.index.js\"],\n    });\n  }\n};\n\nconst main = async () => {\n  chrome.runtime.onInstalled.addListener(handleOnInstalled);\n  chrome.runtime.onStartup.addListener(handleOnStartup);\n  chrome.contextMenus.onClicked.addListener(onContextMenuClicked);\n  chrome.runtime.onMessageExternal.addListener(handleMessages);\n  chrome.runtime.onMessage.addListener(handleMessages);\n};\n\nmain();\n"],"names":["constructor","this","userData","email","picture","freeTrial","login","token","getAuthToken","userCreds","getUserCredentials","sendLoginRequest","updateUserProps","saveUserDataToStorage","error","console","logout","removeCachedAuthToken","revokeToken","log","clearUserDataFromStorage","response","chrome","storage","sync","set","interactive","Promise","resolve","reject","identity","runtime","lastError","fetch","method","ok","statusText","Error","json","user","data","JSON","stringify","headers","body","status","handleOnInstalled","details","reason","contextMenus","create","title","contexts","id","tabs","url","tab","handleOnStartup","async","get","miau","handleMessages","request","sender","sendResponse","message","onContextMenuClicked","menuItemId","query","active","lastFocusedWindow","scripting","executeScript","target","tabId","files","onInstalled","addListener","onStartup","onClicked","onMessageExternal","onMessage","main"],"sourceRoot":""}