{"version":3,"file":"worker/worker.index.js","mappings":"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","sources":["webpack://clarify-ai/./src/oAuth.js","webpack://clarify-ai/./src/app.js"],"sourcesContent":["class AuthService {\n  constructor() {\n    this.user = null;\n  }\n\n  async login() {\n    try {\n      const token = await this.getAuthToken(true);\n      const userCreds = await this.getUserCreditentials(token);\n      const userData = await this.sendLoginRequest(userCreds);\n      this.user = userData;\n      return this.user;\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      throw error;\n    }\n  }\n\n  async logout() {\n    try {\n      const token = await this.getAuthToken(false);\n      if (token) {\n        await this.removeCachedAuthToken(token);\n        await this.revokeToken(token);\n        console.log(\"Logged out successfully\");\n      } else {\n        console.log(\"No token found\");\n      }\n      this.user = null;\n      return { response: \"ok\" };\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n      throw error;\n    }\n  }\n\n  async getAuthToken(interactive) {\n    return new Promise((resolve, reject) => {\n      chrome.identity.getAuthToken({ interactive: interactive }, (token) => {\n        if (chrome.runtime.lastError) {\n          reject(chrome.runtime.lastError);\n        } else {\n          resolve(token);\n        }\n      });\n    });\n  }\n\n  async removeCachedAuthToken(token) {\n    return new Promise((resolve, reject) => {\n      chrome.identity.removeCachedAuthToken({ token: token }, () => {\n        if (!chrome.runtime.lastError) {\n          resolve();\n        } else {\n          reject(chrome.runtime.lastError);\n        }\n      });\n    });\n  }\n\n  async revokeToken(token) {\n    const response = await fetch(\n      \"https://accounts.google.com/o/oauth2/revoke?token=\" + token,\n      {\n        method: \"GET\",\n      }\n    );\n    if (!response.ok) {\n      console.error(\"Error revoking token:\", response.statusText);\n    }\n  }\n\n  async getUserCreditentials(token) {\n    const response = await fetch(\n      \"https://www.googleapis.com/oauth2/v3/userinfo?access_token=\" + token\n    );\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch user data\");\n    }\n    return await response.json();\n  }\n\n  async sendLoginRequest(user) {\n    const data = JSON.stringify(user);\n    const response = await fetch(\"http://localhost:3001/api/signin\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: data,\n    });\n    if (!response.ok) {\n      console.error(\"Login request failed:\", response.status);\n      throw new Error(\"Login request failed\");\n    }\n\n    return await response.json();\n  }\n}\n\nexport default AuthService;\n","import AuthService from \"./oAuth\";\n\nconst user = new AuthService();\n\nconst createContextMenu = () => {\n  chrome.contextMenus.create({\n    title: \"Clarity\",\n    contexts: [\"selection\"],\n    id: \"mfbigjpknmeflcogckmjhpghdjbfpmle\",\n  });\n};\n\nconst handleOnInstalled = (details) => {\n  if (details.reason !== \"install\" && details.reason !== \"update\") return;\n  createContextMenu();\n  const externalUrl = \"http://localhost:3000/onboarding/signin\";\n  chrome.tabs.create({ url: externalUrl }, (tab) => {\n    console.log(\"New tab launched with http://localhost:3000/\");\n  });\n};\n\nconst handleMessages = async (request, sender, sendResponse) => {\n  if (request.message === \"signInRequest\") {\n    const response = await user.login();\n    console.log(response);\n  } else if (request.message === \"logOutRequest\") {\n    const response = await user.logout();\n    console.log(response);\n  }\n};\n\nconst onContextMenuClicked = async (details) => {\n  if (details.menuItemId === \"mfbigjpknmeflcogckmjhpghdjbfpmle\") {\n    const [tab] = await chrome.tabs.query({\n      active: true,\n      lastFocusedWindow: true,\n    });\n\n    chrome.scripting.executeScript({\n      target: { tabId: tab.id },\n      files: [\"./content/index.js\"],\n    });\n  }\n};\n\nconst main = async () => {\n  chrome.runtime.onInstalled.addListener(handleOnInstalled);\n  chrome.contextMenus.onClicked.addListener(onContextMenuClicked);\n  chrome.runtime.onMessageExternal.addListener(handleMessages);\n  chrome.runtime.onMessage.addListener(handleMessages);\n};\n\nmain();\n"],"names":["user","constructor","this","login","token","getAuthToken","userCreds","getUserCreditentials","userData","sendLoginRequest","error","console","logout","removeCachedAuthToken","revokeToken","log","response","interactive","Promise","resolve","reject","chrome","identity","runtime","lastError","fetch","method","ok","statusText","Error","json","data","JSON","stringify","headers","body","status","handleOnInstalled","details","reason","contextMenus","create","title","contexts","id","tabs","url","tab","handleMessages","async","request","sender","sendResponse","message","onContextMenuClicked","menuItemId","query","active","lastFocusedWindow","scripting","executeScript","target","tabId","files","onInstalled","addListener","onClicked","onMessageExternal","onMessage","main"],"sourceRoot":""}