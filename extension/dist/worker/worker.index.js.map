{"version":3,"file":"worker/worker.index.js","mappings":"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","sources":["webpack://clarify-ai/./src/services/AuthService.js","webpack://clarify-ai/./src/app.js","webpack://clarify-ai/./src/services/llmService.js"],"sourcesContent":["class AuthService {\n  constructor() {\n    this.userData = null;\n    this.email = null;\n    this.picture = null;\n    this.freeTrial = null;\n  }\n\n  async login() {\n    try {\n      // Step 1: Get authentication token\n      const token = await this.getAuthToken(true);\n\n      // Step 2: Get user credentials using the token\n      const userCreds = await this.getUserCredentials(token);\n\n      // Step 3: Send login request with user credentials\n      const userData = await this.sendLoginRequest(userCreds);\n\n      // Step 4: Update user properties\n      this.updateUserProps(userData);\n\n      console.log(\"Logged in successfully\");\n      return this.userData;\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      throw error;\n    }\n  }\n\n  async logout() {\n    try {\n      // Step 1: Get authentication token\n      const token = await this.getAuthToken(false);\n\n      if (token) {\n        // Step 2: Remove cached authentication token\n        await this.removeCachedAuthToken(token);\n\n        // Step 3: Revoke token\n        await this.revokeToken(token);\n        console.log(\"Logged out successfully\");\n      } else {\n        console.log(\"No token found\");\n      }\n\n      // Step 4: Clear user properties\n      this.updateUserProps(null);\n\n      return { response: \"ok\" };\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n      throw error;\n    }\n  }\n\n  async getAuthToken(interactive) {\n    return new Promise((resolve, reject) => {\n      chrome.identity.getAuthToken({ interactive: interactive }, (token) => {\n        if (chrome.runtime.lastError) {\n          reject(chrome.runtime.lastError);\n        } else {\n          resolve(token);\n        }\n      });\n    });\n  }\n\n  async removeCachedAuthToken(token) {\n    return new Promise((resolve, reject) => {\n      chrome.identity.removeCachedAuthToken({ token: token }, () => {\n        if (!chrome.runtime.lastError) {\n          resolve();\n        } else {\n          reject(chrome.runtime.lastError);\n        }\n      });\n    });\n  }\n\n  async revokeToken(token) {\n    const response = await fetch(\n      \"https://accounts.google.com/o/oauth2/revoke?token=\" + token,\n      {\n        method: \"GET\",\n      }\n    );\n    if (!response.ok) {\n      console.error(\"Error revoking token:\", response.statusText);\n    }\n  }\n\n  async getUserCredentials(token) {\n    const response = await fetch(\n      \"https://www.googleapis.com/oauth2/v3/userinfo?access_token=\" + token\n    );\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch user data\");\n    }\n    return await response.json();\n  }\n\n  async sendLoginRequest(user) {\n    const data = JSON.stringify(user);\n    const response = await fetch(\"http://localhost:3001/api/auth/signin\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: data,\n    });\n    if (!response.ok) {\n      console.error(\"Login request failed:\", response.status);\n      throw new Error(\"Login request failed\");\n    }\n\n    return await response.json();\n  }\n\n  updateUserProps(data) {\n    if (!data) {\n      this.userData = null;\n      this.email = null;\n      this.picture = null;\n      this.freeTrial = null;\n      return;\n    }\n    this.userData = data;\n    this.email = data.email;\n    this.picture = data.picture;\n    this.freeTrial = data.freeTrial;\n  }\n}\n\nconst user = new AuthService();\nexport default user;\n","import user from \"./services/AuthService\";\nimport getGeneratedText from \"./services/llmService\";\n\nconst handleError = (error, context) => {\n  console.error(`Error in ${context}:`, error);\n};\n\nconst createContextMenu = () => {\n  try {\n    chrome.contextMenus.create({\n      title: \"Clarity\",\n      contexts: [\"selection\"],\n      id: \"mfbigjpknmeflcogckmjhpghdjbfpmle\",\n    });\n  } catch (error) {\n    handleError(error, \"createContextMenu\");\n  }\n};\n\nconst handleOnInstalled = (details) => {\n  try {\n    if (details.reason !== \"install\" && details.reason !== \"update\") return;\n    createContextMenu();\n    const externalUrl = \"http://localhost:3000/onboarding/signin\";\n    chrome.tabs.create({ url: externalUrl }, (tab) => {\n      console.log(\"New tab launched with http://localhost:3000/\");\n    });\n  } catch (error) {\n    handleError(error, \"handleOnInstalled\");\n  }\n};\n\nconst handleOnStartup = async () => {\n  try {\n    const userData = await chrome.storage.sync.get([\"userData\"]);\n    user.updateUserProps(userData);\n  } catch (error) {\n    handleError(error, \"handleOnStartup\");\n  }\n};\n\nconst signinReq = async () => {\n  await user.login();\n  await chrome.storage.sync.set({ userData: user.userData });\n};\n\nconst logOutReq = async () => {\n  await user.logout();\n  await chrome.storage.sync.set({ userData: null });\n};\n\nconst generateTextReq = async (request, sender, sendResponse) => {\n  if (!user.email) {\n    await user.login();\n  }\n\n  const generatedText = await getGeneratedText({\n    prompt: request.prompt,\n    email: user.email,\n  });\n\n  sendResponse(generatedText);\n};\n\nconst handleMessages = (request, sender, sendResponse) => {\n  try {\n    if (request.message === \"signInRequest\") {\n      signinReq();\n    } else if (request.message === \"logOutRequest\") {\n      logOutReq();\n    } else if (request.message === \"generateText\") {\n      generateTextReq(request, sender, sendResponse);\n    }\n    return true;\n  } catch (error) {\n    handleError(error, \"handleMessages\");\n  }\n};\n\nconst onContextMenuClicked = async (details) => {\n  try {\n    if (details.menuItemId === \"mfbigjpknmeflcogckmjhpghdjbfpmle\") {\n      const [tab] = await chrome.tabs.query({\n        active: true,\n        lastFocusedWindow: true,\n      });\n\n      chrome.scripting.executeScript({\n        target: { tabId: tab.id },\n        files: [\"./content/content.index.js\"],\n      });\n    }\n  } catch (error) {\n    handleError(error, \"onContextMenuClicked\");\n  }\n};\n\nconst main = async () => {\n  try {\n    chrome.runtime.onInstalled.addListener(handleOnInstalled);\n    chrome.runtime.onStartup.addListener(handleOnStartup);\n    chrome.contextMenus.onClicked.addListener(onContextMenuClicked);\n    chrome.runtime.onMessageExternal.addListener(handleMessages);\n    chrome.runtime.onMessage.addListener(handleMessages);\n  } catch (error) {\n    handleError(error, \"main\");\n  }\n};\n\nmain();\n","const getGeneratedText = async ({ prompt, email }) => {\n  try {\n    const response = await fetch(\"http://localhost:3001/api/ai/generate\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        prompt,\n        email,\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Network response was not ok\");\n    }\n\n    const data = await response.json();\n    return data.generatedText;\n  } catch (error) {\n    console.error(\"There was a problem with the fetch operation:\", error);\n  }\n};\n\nexport default getGeneratedText;\n"],"names":["constructor","this","userData","email","picture","freeTrial","login","token","getAuthToken","userCreds","getUserCredentials","sendLoginRequest","updateUserProps","console","log","error","logout","removeCachedAuthToken","revokeToken","response","interactive","Promise","resolve","reject","chrome","identity","runtime","lastError","fetch","method","ok","statusText","Error","json","user","data","JSON","stringify","headers","body","status","handleError","context","handleOnInstalled","details","reason","createContextMenu","contextMenus","create","title","contexts","id","externalUrl","tabs","url","tab","handleOnStartup","async","storage","sync","get","handleMessages","request","sender","sendResponse","message","set","signinReq","logOutReq","prompt","generatedText","getGeneratedText","generateTextReq","onContextMenuClicked","menuItemId","query","active","lastFocusedWindow","scripting","executeScript","target","tabId","files","onInstalled","addListener","onStartup","onClicked","onMessageExternal","onMessage","main"],"sourceRoot":""}