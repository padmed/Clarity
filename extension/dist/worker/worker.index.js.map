{"version":3,"file":"worker/worker.index.js","mappings":"mBAAA,MAAMA,EAAgBC,GACb,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,OAAOC,SAASN,aAAa,CAAEC,YAAaA,IAAgBM,IACtDF,OAAOG,QAAQC,UACjBL,EAAOC,OAAOG,QAAQC,WAEtBN,EAAQI,EACV,GACA,ICEAG,EAAqBC,IACF,YAAnBA,EAAQC,QAA2C,WAAnBD,EAAQC,SAR5CP,OAAOQ,aAAaC,OAAO,CACzBC,MAAO,UACPC,SAAU,CAAC,aACXC,GAAI,qCAQNZ,OAAOa,KAAKJ,OAAO,CAAEK,IADD,4CACsBC,IACxCC,QAAQC,IAAI,+CAA+C,IAC3D,EAGEC,EAAiBC,MAAOC,EAASC,EAAQC,KAC7C,GAAwB,kBAApBF,EAAQG,QAA6B,CACvC,MAAMC,ODSWL,WACnB,IACE,MAAMjB,QAAcP,GAAa,GAC3B6B,QAAiBC,MACrB,8DAAgEvB,GAGlE,aADmBsB,EAASE,MAE9B,CAAE,MAAOC,GAEP,MADAX,QAAQW,MAAM,eAAgBA,GACxBA,CACR,GCpByBC,GACvBZ,QAAQC,IAAIO,EACd,MAAO,GAAwB,kBAApBJ,EAAQG,QAA6B,CAC9C,MAAMC,ODoBYL,WACpB,IACE,MAAMjB,QAAcP,GAAa,GACjC,GAAIO,EAAO,MAnCgBA,IACtB,IAAIL,SAAQ,CAACC,EAASC,KAC3BC,OAAOC,SAAS4B,sBAAsB,CAAE3B,MAAOA,IAAS,KACjDF,OAAOG,QAAQC,UAGlBL,EAAOC,OAAOG,QAAQC,WAFtBN,GAGF,GACA,IA4BM+B,CAAsB3B,GAC5B,MAAMsB,OAzBStB,IACZuB,MAAM,qDAAuDvB,EAAO,CACzE4B,OAAQ,QAuBiBC,CAAY7B,GACnC,GAAIsB,EAASQ,GAEX,OADAhB,QAAQC,IAAI,8BACLO,EAEPR,QAAQW,MAAM,wBAAyBH,EAASS,WAEpD,MACEjB,QAAQC,IAAI,iBAEhB,CAAE,MAAOU,GAEP,OADAX,QAAQW,MAAM,qBAAsBA,GAC7B,CAAEK,IAAI,EACf,GCtCyBE,GACvBlB,QAAQC,IAAIO,EACd,GAGIW,EAAuBhB,UAC3B,GAA2B,qCAAvBb,EAAQ8B,WAAmD,CAC7D,MAAOrB,SAAaf,OAAOa,KAAKwB,MAAM,CACpCC,QAAQ,EACRC,mBAAmB,IAGrBvC,OAAOwC,UAAUC,cAAc,CAC7BC,OAAQ,CAAEC,MAAO5B,EAAIH,IACrBgC,MAAO,CAAC,uBAEZ,GAGWzB,WACXnB,OAAOG,QAAQ0C,YAAYC,YAAYzC,GACvCL,OAAOQ,aAAauC,UAAUD,YAAYX,GAC1CnC,OAAOG,QAAQ6C,kBAAkBF,YAAY5B,GAC7ClB,OAAOG,QAAQ8C,UAAUH,YAAY5B,EAAe,EAGtDgC,E","sources":["webpack://clarify-ai/./src/oAuth.js","webpack://clarify-ai/./src/app.js"],"sourcesContent":["const getAuthToken = (interactive) => {\n  return new Promise((resolve, reject) => {\n    chrome.identity.getAuthToken({ interactive: interactive }, (token) => {\n      if (chrome.runtime.lastError) {\n        reject(chrome.runtime.lastError);\n      } else {\n        resolve(token);\n      }\n    });\n  });\n};\n\nconst removeCachedAuthToken = (token) => {\n  return new Promise((resolve, reject) => {\n    chrome.identity.removeCachedAuthToken({ token: token }, () => {\n      if (!chrome.runtime.lastError) {\n        resolve();\n      } else {\n        reject(chrome.runtime.lastError);\n      }\n    });\n  });\n};\n\nconst revokeToken = (token) => {\n  return fetch(\"https://accounts.google.com/o/oauth2/revoke?token=\" + token, {\n    method: \"GET\",\n  });\n};\n\nconst logInRequest = async () => {\n  try {\n    const token = await getAuthToken(true);\n    const response = await fetch(\n      \"https://www.googleapis.com/oauth2/v3/userinfo?access_token=\" + token\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Fetch error:\", error);\n    throw error;\n  }\n};\n\nconst logOutRequest = async () => {\n  try {\n    const token = await getAuthToken(false);\n    if (token) {\n      await removeCachedAuthToken(token);\n      const response = await revokeToken(token);\n      if (response.ok) {\n        console.log(\"Token revoked successfully\");\n        return response;\n      } else {\n        console.error(\"Error revoking token:\", response.statusText);\n      }\n    } else {\n      console.log(\"No token found\");\n    }\n  } catch (error) {\n    console.error(\"Error logging out:\", error);\n    return { ok: false };\n  }\n};\n\nexport { logInRequest, logOutRequest };\n","import { logInRequest, logOutRequest } from \"./oAuth\";\n\nconst createContextMenu = () => {\n  chrome.contextMenus.create({\n    title: \"Clarity\",\n    contexts: [\"selection\"],\n    id: \"mfbigjpknmeflcogckmjhpghdjbfpmle\",\n  });\n};\n\nconst handleOnInstalled = (details) => {\n  if (details.reason !== \"install\" && details.reason !== \"update\") return;\n  createContextMenu();\n  const externalUrl = \"http://localhost:3000/onboarding/signin\";\n  chrome.tabs.create({ url: externalUrl }, (tab) => {\n    console.log(\"New tab launched with http://localhost:3000/\");\n  });\n};\n\nconst handleMessages = async (request, sender, sendResponse) => {\n  if (request.message === \"signInRequest\") {\n    const response = await logInRequest();\n    console.log(response);\n  } else if (request.message === \"logOutRequest\") {\n    const response = await logOutRequest();\n    console.log(response);\n  }\n};\n\nconst onContextMenuClicked = async (details) => {\n  if (details.menuItemId === \"mfbigjpknmeflcogckmjhpghdjbfpmle\") {\n    const [tab] = await chrome.tabs.query({\n      active: true,\n      lastFocusedWindow: true,\n    });\n\n    chrome.scripting.executeScript({\n      target: { tabId: tab.id },\n      files: [\"./content/index.js\"],\n    });\n  }\n};\n\nconst main = async () => {\n  chrome.runtime.onInstalled.addListener(handleOnInstalled);\n  chrome.contextMenus.onClicked.addListener(onContextMenuClicked);\n  chrome.runtime.onMessageExternal.addListener(handleMessages);\n  chrome.runtime.onMessage.addListener(handleMessages);\n};\n\nmain();\n"],"names":["getAuthToken","interactive","Promise","resolve","reject","chrome","identity","token","runtime","lastError","handleOnInstalled","details","reason","contextMenus","create","title","contexts","id","tabs","url","tab","console","log","handleMessages","async","request","sender","sendResponse","message","response","fetch","json","error","logInRequest","removeCachedAuthToken","method","revokeToken","ok","statusText","logOutRequest","onContextMenuClicked","menuItemId","query","active","lastFocusedWindow","scripting","executeScript","target","tabId","files","onInstalled","addListener","onClicked","onMessageExternal","onMessage","main"],"sourceRoot":""}