(()=>{"use strict";const e=e=>new Promise(((t,o)=>{chrome.identity.getAuthToken({interactive:e},(e=>{chrome.runtime.lastError?o(chrome.runtime.lastError):t(e)}))})),t=e=>{"install"!==e.reason&&"update"!==e.reason||(chrome.contextMenus.create({title:"Clarity",contexts:["selection"],id:"mfbigjpknmeflcogckmjhpghdjbfpmle"}),chrome.tabs.create({url:"http://localhost:3000/onboarding/signin"},(e=>{console.log("New tab launched with http://localhost:3000/")})))},o=async(t,o,r)=>{if("signInRequest"===t.message){const t=await(async()=>{try{const t=await e(!0),o=await fetch("https://www.googleapis.com/oauth2/v3/userinfo?access_token="+t);return await o.json()}catch(e){throw console.error("Fetch error:",e),e}})();console.log(t)}else if("logOutRequest"===t.message){const t=await(async()=>{try{const t=await e(!1);if(t){await(e=>new Promise(((t,o)=>{chrome.identity.removeCachedAuthToken({token:e},(()=>{chrome.runtime.lastError?o(chrome.runtime.lastError):t()}))})))(t);const e=await(e=>fetch("https://accounts.google.com/o/oauth2/revoke?token="+e,{method:"GET"}))(t);if(e.ok)return console.log("Token revoked successfully"),e;console.error("Error revoking token:",e.statusText)}else console.log("No token found")}catch(e){return console.error("Error logging out:",e),{ok:!1}}})();console.log(t)}},r=async e=>{if("mfbigjpknmeflcogckmjhpghdjbfpmle"===e.menuItemId){const[e]=await chrome.tabs.query({active:!0,lastFocusedWindow:!0});chrome.scripting.executeScript({target:{tabId:e.id},files:["./content/index.js"]})}};(async()=>{chrome.runtime.onInstalled.addListener(t),chrome.contextMenus.onClicked.addListener(r),chrome.runtime.onMessageExternal.addListener(o),chrome.runtime.onMessage.addListener(o)})()})();
//# sourceMappingURL=worker.index.js.map